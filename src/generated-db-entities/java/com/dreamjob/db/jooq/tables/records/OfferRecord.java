/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.records;


import com.dreamjob.db.jooq.tables.Offer;

import java.beans.ConstructorProperties;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfferRecord extends UpdatableRecordImpl<OfferRecord> implements Record7<Integer, Integer, BigDecimal, String, BigDecimal, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>offer.id</code>.
     */
    public OfferRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>offer.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>offer.trader_id</code>.
     */
    public OfferRecord setTraderId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>offer.trader_id</code>.
     */
    public Integer getTraderId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>offer.labor_cost</code>.
     */
    public OfferRecord setLaborCost(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>offer.labor_cost</code>.
     */
    public BigDecimal getLaborCost() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>offer.description</code>.
     */
    public OfferRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>offer.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>offer.total_price</code>.
     */
    public OfferRecord setTotalPrice(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>offer.total_price</code>.
     */
    public BigDecimal getTotalPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>offer.created_on</code>.
     */
    public OfferRecord setCreatedOn(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>offer.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>offer.updated_on</code>.
     */
    public OfferRecord setUpdatedOn(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>offer.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, BigDecimal, String, BigDecimal, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, BigDecimal, String, BigDecimal, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Offer.OFFER.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Offer.OFFER.TRADER_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Offer.OFFER.LABOR_COST;
    }

    @Override
    public Field<String> field4() {
        return Offer.OFFER.DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Offer.OFFER.TOTAL_PRICE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Offer.OFFER.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Offer.OFFER.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getTraderId();
    }

    @Override
    public BigDecimal component3() {
        return getLaborCost();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public BigDecimal component5() {
        return getTotalPrice();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getTraderId();
    }

    @Override
    public BigDecimal value3() {
        return getLaborCost();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public BigDecimal value5() {
        return getTotalPrice();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedOn();
    }

    @Override
    public OfferRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OfferRecord value2(Integer value) {
        setTraderId(value);
        return this;
    }

    @Override
    public OfferRecord value3(BigDecimal value) {
        setLaborCost(value);
        return this;
    }

    @Override
    public OfferRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public OfferRecord value5(BigDecimal value) {
        setTotalPrice(value);
        return this;
    }

    @Override
    public OfferRecord value6(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public OfferRecord value7(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public OfferRecord values(Integer value1, Integer value2, BigDecimal value3, String value4, BigDecimal value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OfferRecord
     */
    public OfferRecord() {
        super(Offer.OFFER);
    }

    /**
     * Create a detached, initialised OfferRecord
     */
    @ConstructorProperties({ "id", "traderId", "laborCost", "description", "totalPrice", "createdOn", "updatedOn" })
    public OfferRecord(Integer id, Integer traderId, BigDecimal laborCost, String description, BigDecimal totalPrice, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(Offer.OFFER);

        setId(id);
        setTraderId(traderId);
        setLaborCost(laborCost);
        setDescription(description);
        setTotalPrice(totalPrice);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised OfferRecord
     */
    @ConstructorProperties({ "id", "traderId", "laborCost", "description", "totalPrice", "createdOn", "updatedOn" })
    public OfferRecord(com.dreamjob.db.jooq.tables.pojos.Offer value) {
        super(Offer.OFFER);

        if (value != null) {
            setId(value.getId());
            setTraderId(value.getTraderId());
            setLaborCost(value.getLaborCost());
            setDescription(value.getDescription());
            setTotalPrice(value.getTotalPrice());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
}

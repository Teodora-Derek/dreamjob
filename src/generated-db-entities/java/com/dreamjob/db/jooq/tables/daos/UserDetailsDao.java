/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.daos;


import com.dreamjob.db.jooq.tables.UserDetails;
import com.dreamjob.db.jooq.tables.records.UserDetailsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserDetailsDao extends DAOImpl<UserDetailsRecord, com.dreamjob.db.jooq.tables.pojos.UserDetails, UUID> {

    /**
     * Create a new UserDetailsDao without any configuration
     */
    public UserDetailsDao() {
        super(UserDetails.USER_DETAILS, com.dreamjob.db.jooq.tables.pojos.UserDetails.class);
    }

    /**
     * Create a new UserDetailsDao with an attached configuration
     */
    @Autowired
    public UserDetailsDao(Configuration configuration) {
        super(UserDetails.USER_DETAILS, com.dreamjob.db.jooq.tables.pojos.UserDetails.class, configuration);
    }

    @Override
    public UUID getId(com.dreamjob.db.jooq.tables.pojos.UserDetails object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchById(UUID... values) {
        return fetch(UserDetails.USER_DETAILS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dreamjob.db.jooq.tables.pojos.UserDetails fetchOneById(UUID value) {
        return fetchOne(UserDetails.USER_DETAILS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchOptionalById(UUID value) {
        return fetchOptional(UserDetails.USER_DETAILS.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchByUsername(String... values) {
        return fetch(UserDetails.USER_DETAILS.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.dreamjob.db.jooq.tables.pojos.UserDetails fetchOneByUsername(String value) {
        return fetchOne(UserDetails.USER_DETAILS.USERNAME, value);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public Optional<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchOptionalByUsername(String value) {
        return fetchOptional(UserDetails.USER_DETAILS.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchByPassword(String... values) {
        return fetch(UserDetails.USER_DETAILS.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(UserDetails.USER_DETAILS.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.UserDetails> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(UserDetails.USER_DETAILS.UPDATED_ON, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.daos;


import com.dreamjob.db.jooq.tables.Resource;
import com.dreamjob.db.jooq.tables.records.ResourceRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ResourceDao extends DAOImpl<ResourceRecord, com.dreamjob.db.jooq.tables.pojos.Resource, Integer> {

    /**
     * Create a new ResourceDao without any configuration
     */
    public ResourceDao() {
        super(Resource.RESOURCE, com.dreamjob.db.jooq.tables.pojos.Resource.class);
    }

    /**
     * Create a new ResourceDao with an attached configuration
     */
    @Autowired
    public ResourceDao(Configuration configuration) {
        super(Resource.RESOURCE, com.dreamjob.db.jooq.tables.pojos.Resource.class, configuration);
    }

    @Override
    public Integer getId(com.dreamjob.db.jooq.tables.pojos.Resource object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resource.RESOURCE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchById(Integer... values) {
        return fetch(Resource.RESOURCE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dreamjob.db.jooq.tables.pojos.Resource fetchOneById(Integer value) {
        return fetchOne(Resource.RESOURCE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dreamjob.db.jooq.tables.pojos.Resource> fetchOptionalById(Integer value) {
        return fetchOptional(Resource.RESOURCE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resource.RESOURCE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchByName(String... values) {
        return fetch(Resource.RESOURCE.NAME, values);
    }

    /**
     * Fetch records that have <code>unit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchRangeOfUnit(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resource.RESOURCE.UNIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>unit IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchByUnit(String... values) {
        return fetch(Resource.RESOURCE.UNIT, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Resource.RESOURCE.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Resource.RESOURCE.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Resource.RESOURCE.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Resource> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Resource.RESOURCE.UPDATED_ON, values);
    }
}

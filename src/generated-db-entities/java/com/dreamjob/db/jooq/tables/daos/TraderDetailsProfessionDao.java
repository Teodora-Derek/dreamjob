/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.daos;


import com.dreamjob.db.jooq.tables.TraderDetailsProfession;
import com.dreamjob.db.jooq.tables.records.TraderDetailsProfessionRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TraderDetailsProfessionDao extends DAOImpl<TraderDetailsProfessionRecord, com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession, Record2<Integer, Integer>> {

    /**
     * Create a new TraderDetailsProfessionDao without any configuration
     */
    public TraderDetailsProfessionDao() {
        super(TraderDetailsProfession.TRADER_DETAILS_PROFESSION, com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession.class);
    }

    /**
     * Create a new TraderDetailsProfessionDao with an attached configuration
     */
    @Autowired
    public TraderDetailsProfessionDao(Configuration configuration) {
        super(TraderDetailsProfession.TRADER_DETAILS_PROFESSION, com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession object) {
        return compositeKeyRecord(object.getProfessionId(), object.getTraderId());
    }

    /**
     * Fetch records that have <code>trader_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchRangeOfTraderId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.TRADER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>trader_id IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchByTraderId(Integer... values) {
        return fetch(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.TRADER_ID, values);
    }

    /**
     * Fetch records that have <code>profession_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchRangeOfProfessionId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.PROFESSION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profession_id IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchByProfessionId(Integer... values) {
        return fetch(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.PROFESSION_ID, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.TraderDetailsProfession> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(TraderDetailsProfession.TRADER_DETAILS_PROFESSION.UPDATED_ON, values);
    }
}

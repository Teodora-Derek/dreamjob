/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDetails implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID          id;
    private String        username;
    private String        password;
    private LocalDateTime createdOn;
    private LocalDateTime updatedOn;

    public UserDetails() {}

    public UserDetails(UserDetails value) {
        this.id = value.id;
        this.username = value.username;
        this.password = value.password;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    @ConstructorProperties({ "id", "username", "password", "createdOn", "updatedOn" })
    public UserDetails(
        UUID          id,
        String        username,
        String        password,
        LocalDateTime createdOn,
        LocalDateTime updatedOn
    ) {
        this.id = id;
        this.username = username;
        this.password = password;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>user_details.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>user_details.id</code>.
     */
    public UserDetails setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>user_details.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>user_details.username</code>.
     */
    public UserDetails setUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Getter for <code>user_details.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>user_details.password</code>.
     */
    public UserDetails setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>user_details.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>user_details.created_on</code>.
     */
    public UserDetails setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>user_details.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>user_details.updated_on</code>.
     */
    public UserDetails setUpdatedOn(LocalDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserDetails other = (UserDetails) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (username == null) {
            if (other.username != null)
                return false;
        }
        else if (!username.equals(other.username))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (updatedOn == null) {
            if (other.updatedOn != null)
                return false;
        }
        else if (!updatedOn.equals(other.updatedOn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.updatedOn == null) ? 0 : this.updatedOn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserDetails (");

        sb.append(id);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.records;


import com.dreamjob.db.jooq.tables.ProfessionType;

import java.beans.ConstructorProperties;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfessionTypeRecord extends UpdatableRecordImpl<ProfessionTypeRecord> implements Record5<Integer, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>profession_type.id</code>.
     */
    public ProfessionTypeRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>profession_type.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>profession_type.name</code>.
     */
    public ProfessionTypeRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>profession_type.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>profession_type.description</code>.
     */
    public ProfessionTypeRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>profession_type.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>profession_type.created_on</code>.
     */
    public ProfessionTypeRecord setCreatedOn(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>profession_type.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>profession_type.updated_on</code>.
     */
    public ProfessionTypeRecord setUpdatedOn(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>profession_type.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ProfessionType.PROFESSION_TYPE.ID;
    }

    @Override
    public Field<String> field2() {
        return ProfessionType.PROFESSION_TYPE.NAME;
    }

    @Override
    public Field<String> field3() {
        return ProfessionType.PROFESSION_TYPE.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return ProfessionType.PROFESSION_TYPE.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ProfessionType.PROFESSION_TYPE.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedOn();
    }

    @Override
    public ProfessionTypeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProfessionTypeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProfessionTypeRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProfessionTypeRecord value4(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ProfessionTypeRecord value5(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ProfessionTypeRecord values(Integer value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfessionTypeRecord
     */
    public ProfessionTypeRecord() {
        super(ProfessionType.PROFESSION_TYPE);
    }

    /**
     * Create a detached, initialised ProfessionTypeRecord
     */
    @ConstructorProperties({ "id", "name", "description", "createdOn", "updatedOn" })
    public ProfessionTypeRecord(Integer id, String name, String description, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(ProfessionType.PROFESSION_TYPE);

        setId(id);
        setName(name);
        setDescription(description);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised ProfessionTypeRecord
     */
    @ConstructorProperties({ "id", "name", "description", "createdOn", "updatedOn" })
    public ProfessionTypeRecord(com.dreamjob.db.jooq.tables.pojos.ProfessionType value) {
        super(ProfessionType.PROFESSION_TYPE);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
}

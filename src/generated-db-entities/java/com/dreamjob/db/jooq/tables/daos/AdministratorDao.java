/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.daos;


import com.dreamjob.db.jooq.tables.Administrator;
import com.dreamjob.db.jooq.tables.records.AdministratorRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AdministratorDao extends DAOImpl<AdministratorRecord, com.dreamjob.db.jooq.tables.pojos.Administrator, Integer> {

    /**
     * Create a new AdministratorDao without any configuration
     */
    public AdministratorDao() {
        super(Administrator.ADMINISTRATOR, com.dreamjob.db.jooq.tables.pojos.Administrator.class);
    }

    /**
     * Create a new AdministratorDao with an attached configuration
     */
    @Autowired
    public AdministratorDao(Configuration configuration) {
        super(Administrator.ADMINISTRATOR, com.dreamjob.db.jooq.tables.pojos.Administrator.class, configuration);
    }

    @Override
    public Integer getId(com.dreamjob.db.jooq.tables.pojos.Administrator object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Administrator.ADMINISTRATOR.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchById(Integer... values) {
        return fetch(Administrator.ADMINISTRATOR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dreamjob.db.jooq.tables.pojos.Administrator fetchOneById(Integer value) {
        return fetchOne(Administrator.ADMINISTRATOR.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchOptionalById(Integer value) {
        return fetchOptional(Administrator.ADMINISTRATOR.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Administrator.ADMINISTRATOR.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchByUsername(String... values) {
        return fetch(Administrator.ADMINISTRATOR.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.dreamjob.db.jooq.tables.pojos.Administrator fetchOneByUsername(String value) {
        return fetchOne(Administrator.ADMINISTRATOR.USERNAME, value);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public Optional<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchOptionalByUsername(String value) {
        return fetchOptional(Administrator.ADMINISTRATOR.USERNAME, value);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Administrator.ADMINISTRATOR.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchByEmail(String... values) {
        return fetch(Administrator.ADMINISTRATOR.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public com.dreamjob.db.jooq.tables.pojos.Administrator fetchOneByEmail(String value) {
        return fetchOne(Administrator.ADMINISTRATOR.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchOptionalByEmail(String value) {
        return fetchOptional(Administrator.ADMINISTRATOR.EMAIL, value);
    }

    /**
     * Fetch records that have <code>password_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchRangeOfPasswordHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Administrator.ADMINISTRATOR.PASSWORD_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_hash IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchByPasswordHash(String... values) {
        return fetch(Administrator.ADMINISTRATOR.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Administrator.ADMINISTRATOR.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Administrator.ADMINISTRATOR.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Administrator.ADMINISTRATOR.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Administrator> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Administrator.ADMINISTRATOR.UPDATED_ON, values);
    }
}

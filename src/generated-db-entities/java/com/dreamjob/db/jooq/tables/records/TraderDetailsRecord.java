/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.records;


import com.dreamjob.db.jooq.tables.TraderDetails;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TraderDetailsRecord extends UpdatableRecordImpl<TraderDetailsRecord> implements Record5<Integer, Integer, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>trader_details.id</code>.
     */
    public TraderDetailsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>trader_details.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>trader_details.user_id</code>.
     */
    public TraderDetailsRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>trader_details.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>trader_details.profession_id</code>.
     */
    public TraderDetailsRecord setProfessionId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>trader_details.profession_id</code>.
     */
    public Integer getProfessionId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>trader_details.mobile_number</code>.
     */
    public TraderDetailsRecord setMobileNumber(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>trader_details.mobile_number</code>.
     */
    public String getMobileNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>trader_details.description</code>.
     */
    public TraderDetailsRecord setDescription(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>trader_details.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, Integer, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TraderDetails.TRADER_DETAILS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return TraderDetails.TRADER_DETAILS.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return TraderDetails.TRADER_DETAILS.PROFESSION_ID;
    }

    @Override
    public Field<String> field4() {
        return TraderDetails.TRADER_DETAILS.MOBILE_NUMBER;
    }

    @Override
    public Field<String> field5() {
        return TraderDetails.TRADER_DETAILS.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getProfessionId();
    }

    @Override
    public String component4() {
        return getMobileNumber();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getProfessionId();
    }

    @Override
    public String value4() {
        return getMobileNumber();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public TraderDetailsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TraderDetailsRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public TraderDetailsRecord value3(Integer value) {
        setProfessionId(value);
        return this;
    }

    @Override
    public TraderDetailsRecord value4(String value) {
        setMobileNumber(value);
        return this;
    }

    @Override
    public TraderDetailsRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TraderDetailsRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TraderDetailsRecord
     */
    public TraderDetailsRecord() {
        super(TraderDetails.TRADER_DETAILS);
    }

    /**
     * Create a detached, initialised TraderDetailsRecord
     */
    @ConstructorProperties({ "id", "userId", "professionId", "mobileNumber", "description" })
    public TraderDetailsRecord(Integer id, Integer userId, Integer professionId, String mobileNumber, String description) {
        super(TraderDetails.TRADER_DETAILS);

        setId(id);
        setUserId(userId);
        setProfessionId(professionId);
        setMobileNumber(mobileNumber);
        setDescription(description);
    }

    /**
     * Create a detached, initialised TraderDetailsRecord
     */
    @ConstructorProperties({ "id", "userId", "professionId", "mobileNumber", "description" })
    public TraderDetailsRecord(com.dreamjob.db.jooq.tables.pojos.TraderDetails value) {
        super(TraderDetails.TRADER_DETAILS);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setProfessionId(value.getProfessionId());
            setMobileNumber(value.getMobileNumber());
            setDescription(value.getDescription());
        }
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.records;


import com.dreamjob.db.jooq.tables.UserDetails;

import java.beans.ConstructorProperties;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDetailsRecord extends UpdatableRecordImpl<UserDetailsRecord> implements Record8<Integer, String, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_details.id</code>.
     */
    public UserDetailsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user_details.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>user_details.username</code>.
     */
    public UserDetailsRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user_details.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user_details.password</code>.
     */
    public UserDetailsRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user_details.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user_details.email</code>.
     */
    public UserDetailsRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>user_details.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user_details.display_name</code>.
     */
    public UserDetailsRecord setDisplayName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>user_details.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>user_details.role</code>.
     */
    public UserDetailsRecord setRole(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>user_details.role</code>.
     */
    public String getRole() {
        return (String) get(5);
    }

    /**
     * Setter for <code>user_details.created_on</code>.
     */
    public UserDetailsRecord setCreatedOn(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>user_details.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>user_details.updated_on</code>.
     */
    public UserDetailsRecord setUpdatedOn(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>user_details.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserDetails.USER_DETAILS.ID;
    }

    @Override
    public Field<String> field2() {
        return UserDetails.USER_DETAILS.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return UserDetails.USER_DETAILS.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return UserDetails.USER_DETAILS.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return UserDetails.USER_DETAILS.DISPLAY_NAME;
    }

    @Override
    public Field<String> field6() {
        return UserDetails.USER_DETAILS.ROLE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return UserDetails.USER_DETAILS.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return UserDetails.USER_DETAILS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getDisplayName();
    }

    @Override
    public String component6() {
        return getRole();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getDisplayName();
    }

    @Override
    public String value6() {
        return getRole();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedOn();
    }

    @Override
    public UserDetailsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserDetailsRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserDetailsRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserDetailsRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserDetailsRecord value5(String value) {
        setDisplayName(value);
        return this;
    }

    @Override
    public UserDetailsRecord value6(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UserDetailsRecord value7(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public UserDetailsRecord value8(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public UserDetailsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserDetailsRecord
     */
    public UserDetailsRecord() {
        super(UserDetails.USER_DETAILS);
    }

    /**
     * Create a detached, initialised UserDetailsRecord
     */
    @ConstructorProperties({ "id", "username", "password", "email", "displayName", "role", "createdOn", "updatedOn" })
    public UserDetailsRecord(Integer id, String username, String password, String email, String displayName, String role, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(UserDetails.USER_DETAILS);

        setId(id);
        setUsername(username);
        setPassword(password);
        setEmail(email);
        setDisplayName(displayName);
        setRole(role);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised UserDetailsRecord
     */
    @ConstructorProperties({ "id", "username", "password", "email", "displayName", "role", "createdOn", "updatedOn" })
    public UserDetailsRecord(com.dreamjob.db.jooq.tables.pojos.UserDetails value) {
        super(UserDetails.USER_DETAILS);

        if (value != null) {
            setId(value.getId());
            setUsername(value.getUsername());
            setPassword(value.getPassword());
            setEmail(value.getEmail());
            setDisplayName(value.getDisplayName());
            setRole(value.getRole());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
}

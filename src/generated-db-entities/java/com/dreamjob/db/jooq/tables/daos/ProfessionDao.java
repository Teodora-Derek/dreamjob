/*
 * This file is generated by jOOQ.
 */
package com.dreamjob.db.jooq.tables.daos;


import com.dreamjob.db.jooq.tables.Profession;
import com.dreamjob.db.jooq.tables.records.ProfessionRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ProfessionDao extends DAOImpl<ProfessionRecord, com.dreamjob.db.jooq.tables.pojos.Profession, Integer> {

    /**
     * Create a new ProfessionDao without any configuration
     */
    public ProfessionDao() {
        super(Profession.PROFESSION, com.dreamjob.db.jooq.tables.pojos.Profession.class);
    }

    /**
     * Create a new ProfessionDao with an attached configuration
     */
    @Autowired
    public ProfessionDao(Configuration configuration) {
        super(Profession.PROFESSION, com.dreamjob.db.jooq.tables.pojos.Profession.class, configuration);
    }

    @Override
    public Integer getId(com.dreamjob.db.jooq.tables.pojos.Profession object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Profession.PROFESSION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchById(Integer... values) {
        return fetch(Profession.PROFESSION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dreamjob.db.jooq.tables.pojos.Profession fetchOneById(Integer value) {
        return fetchOne(Profession.PROFESSION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dreamjob.db.jooq.tables.pojos.Profession> fetchOptionalById(Integer value) {
        return fetchOptional(Profession.PROFESSION.ID, value);
    }

    /**
     * Fetch records that have <code>profession_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchRangeOfProfessionName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Profession.PROFESSION.PROFESSION_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profession_name IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchByProfessionName(String... values) {
        return fetch(Profession.PROFESSION.PROFESSION_NAME, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Profession.PROFESSION.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchByDescription(String... values) {
        return fetch(Profession.PROFESSION.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Profession.PROFESSION.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchByStatus(String... values) {
        return fetch(Profession.PROFESSION.STATUS, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Profession.PROFESSION.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Profession.PROFESSION.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Profession.PROFESSION.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<com.dreamjob.db.jooq.tables.pojos.Profession> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Profession.PROFESSION.UPDATED_ON, values);
    }
}
